{"ast":null,"code":"var _jsxFileName = \"/Users/aaronho/Desktop/UW Seattle Doc/INFO442/christmas/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [monthData, setMonthData] = useState([]);\n  const days = daysInMonth(2, 2023); // returns amount of days of given month\n  const monthDetails = datesDayMonth(days);\n  useEffect(() => {\n    for (let count = 1; count <= weekCount; count++) {\n      const newWeek = {\n        week: count\n      };\n      const newMonthData = [...monthData, newWeek];\n      setMonthData(newMonthData);\n      // setMonthData(newMonthData);\n      // console.log([...Array(weekCount)]);\n    }\n  }, []);\n  let weekCount = monthDetails[Object.keys(monthDetails).length - 1].week;\n  const handleCalenderWeek = [...Array(weekCount)].map((e, i) => /*#__PURE__*/_jsxDEV(WeekCard, {\n    monthData: monthDetails,\n    weekNum: i + 1\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 68\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Sunday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Monday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Tuesday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Wednesday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Thursday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Friday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: \"Saturday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), handleCalenderWeek]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"jjazluoY90iNtlINSmXdxqUnk7c=\");\n_c = Calendar;\nfunction daysInMonth(month, year) {\n  return new Date(year, month, 0).getDate();\n}\nfunction datesDayMonth(day) {\n  const monthDisplay = [];\n  const dateData = [...Array(day)].map((e, i) => {\n    let todayDate = new Date();\n    let todayMonth = 2; //todayDate.getMonth() + 1;\n    let dayOfWeekNumber = new Date(todayMonth + ' ' + (i + 1) + ', 2023').getDay();\n    const dayInfo = {\n      date: i + 1,\n      dayofWeek: dayOfWeekNumber,\n      month: todayMonth\n    };\n    return dayInfo;\n  });\n  let weekCount = 1;\n  const realTimeDates = dateData.map(givenDate => {\n    givenDate['week'] = weekCount;\n    if (givenDate.dayofWeek === 6) {\n      weekCount += 1;\n    }\n    return givenDate;\n  });\n  return realTimeDates;\n}\nexport function WeekCard(props) {\n  const filterWeek = props.monthData.filter(data => {\n    return data.week === props.weekNum;\n  });\n  // if have less then fill it out\n  checkWeekData(filterWeek);\n  // console.log(filterWeek);\n  // sort by daysofWeek\n  const displayWeek = filterWeek.map(data => /*#__PURE__*/_jsxDEV(DayCard, {\n    dayInfo: data,\n    keys: data.date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: displayWeek\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_c2 = WeekCard;\nfunction checkWeekData(data) {\n  console.log(data[0].dayofWeek);\n  if (data.length < 7) {\n    // for (let i = 0; i < 7; i++) {\n    //     console.log(data[i].dayofWeek)\n    // }\n  }\n}\nexport function DayCard(props) {\n  const dayInfo = props.dayInfo;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    children: dayInfo.date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_c3 = DayCard;\nexport default Calendar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Calendar\");\n$RefreshReg$(_c2, \"WeekCard\");\n$RefreshReg$(_c3, \"DayCard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","monthData","setMonthData","days","daysInMonth","monthDetails","datesDayMonth","count","weekCount","newWeek","week","newMonthData","Object","keys","length","handleCalenderWeek","Array","map","e","i","month","year","Date","getDate","day","monthDisplay","dateData","todayDate","todayMonth","dayOfWeekNumber","getDay","dayInfo","date","dayofWeek","realTimeDates","givenDate","WeekCard","props","filterWeek","filter","data","weekNum","checkWeekData","displayWeek","console","log","DayCard"],"sources":["/Users/aaronho/Desktop/UW Seattle Doc/INFO442/christmas/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\n\nfunction Calendar() {\n    const [monthData, setMonthData] = useState([])\n    const days = daysInMonth(2, 2023); // returns amount of days of given month\n    const monthDetails = datesDayMonth(days);\n\n    useEffect(() => {\n        for (let count=1; count <= weekCount; count++) {\n            const newWeek = {\n                week: count\n            }\n            const newMonthData = [...monthData, newWeek];\n            setMonthData(newMonthData);\n            // setMonthData(newMonthData);\n            // console.log([...Array(weekCount)]);\n        }\n    }, [])\n    \n    let weekCount = monthDetails[Object.keys(monthDetails).length - 1].week;\n    const handleCalenderWeek = [...Array(weekCount)].map((e, i) => <WeekCard monthData={monthDetails} weekNum={i + 1} key={i}/>)\n\n    return (\n        <div className=\"container text-center bg-white\">\n            <div className=\"row\">\n                <div className=\"col\">Sunday</div>\n                <div className=\"col\">Monday</div>\n                <div className=\"col\">Tuesday</div>\n                <div className=\"col\">Wednesday</div>\n                <div className=\"col\">Thursday</div>\n                <div className=\"col\">Friday</div>\n                <div className=\"col\">Saturday</div>\n            </div>\n                {handleCalenderWeek}\n        </div>\n    );\n}\n\nfunction daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n}\n\nfunction datesDayMonth(day) {\n    const monthDisplay = [];\n\n    const dateData = [...Array(day)].map((e, i) => {\n        let todayDate = new Date();\n        let todayMonth =  2; //todayDate.getMonth() + 1;\n        let dayOfWeekNumber = new Date(todayMonth +  ' ' + (i + 1) + ', 2023').getDay();\n        const dayInfo = {\n            date: (i + 1),\n            dayofWeek: dayOfWeekNumber,\n            month: todayMonth\n        }\n        return dayInfo;\n    })\n    \n    let weekCount = 1;\n\n    const realTimeDates = dateData.map((givenDate) => {\n        givenDate['week'] = weekCount;\n        if(givenDate.dayofWeek === 6) {\n            weekCount+=1;\n        }\n        return givenDate\n    })\n    return realTimeDates;\n}\n\nexport function WeekCard(props) {\n    const filterWeek = props.monthData.filter((data) => {\n        return data.week === props.weekNum;\n    })\n    // if have less then fill it out\n    checkWeekData(filterWeek);\n    // console.log(filterWeek);\n    // sort by daysofWeek\n    const displayWeek = filterWeek.map((data) => <DayCard dayInfo={data} keys={data.date}/>)\n    return (\n        <div className=\"row\">\n            {displayWeek}\n        </div>\n    );\n}\n\nfunction checkWeekData(data) {\n    console.log(data[0].dayofWeek)\n    if(data.length < 7) {\n        // for (let i = 0; i < 7; i++) {\n        //     console.log(data[i].dayofWeek)\n        // }\n    }\n}\n\nexport function DayCard(props){ \n    const dayInfo = props.dayInfo\n    return (\n        <div className=\"col\">{dayInfo.date}</div>\n    );\n}\n\nexport default Calendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}